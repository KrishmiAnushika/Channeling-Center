/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.doctor_chaneling_center.view;

import edu.ijse.doctor_chaneling_center.controller.ControllerFactory;
import edu.ijse.doctor_chaneling_center.controller.custom.AppointmentController;
import edu.ijse.doctor_chaneling_center.controller.custom.DoctorController;
import edu.ijse.doctor_chaneling_center.controller.custom.PatientController;
import edu.ijse.doctor_chaneling_center.controller.custom.SpecialityController;
import edu.ijse.doctor_chaneling_center.dto.AppointmentDTO;
import edu.ijse.doctor_chaneling_center.dto.DoctorDTO;
import edu.ijse.doctor_chaneling_center.dto.PatientDTO;
import edu.ijse.doctor_chaneling_center.dto.SpecialityDTO;
import edu.ijse.doctor_chaneling_center.other.Validation;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class SearchPatientAppointment extends javax.swing.JPanel {
    private PatientController patientController;
    private AppointmentController appointmentController;
    private DoctorController doctorController;
    private SpecialityController specialityController;
    /**
     * Creates new form SearchPatientAppointment
     */
    public SearchPatientAppointment() {
        initComponents();
        patientController=(PatientController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PATIENT);
        appointmentController=(AppointmentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.APPOINTMENT);
        doctorController=(DoctorController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.DOCTOR);
        specialityController=(SpecialityController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SPECIALITY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        pnlUi = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblSpeciality = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        lblDoctorAddress = new javax.swing.JLabel();
        txtPatientAddress = new javax.swing.JTextField();
        lblDoctorTele = new javax.swing.JLabel();
        txtPatientTele = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        rdbMale = new javax.swing.JRadioButton();
        rdbFemale = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        lblAllAppointment = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("RECEPTIONDASHBOARD / RECEPTION");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 20, 200, -1));

        lblTitle.setBackground(new java.awt.Color(0, 0, 51));
        lblTitle.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("SEARCH APPOINTMENT");
        lblTitle.setOpaque(true);
        jPanel2.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1120, 30));

        pnlUi.setBackground(new java.awt.Color(255, 255, 204));
        pnlUi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnlUi.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 650, 10));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment Id", "Appointment No", "Appointment Date", "Appointment Time", "Booking Date", "Booking Time", "Doctor Name", "Speciality"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        pnlUi.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 640, 430));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblSpeciality.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSpeciality.setText("Patient Name:");

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        lblDoctorName.setDisplayedMnemonic('N');
        lblDoctorName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorName.setText("Patient Id:");

        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });

        lblDoctorAddress.setDisplayedMnemonic('A');
        lblDoctorAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorAddress.setText("Patient Address:");

        txtPatientAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAddressActionPerformed(evt);
            }
        });

        lblDoctorTele.setDisplayedMnemonic('T');
        lblDoctorTele.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorTele.setText("Patient  Tele:");

        txtPatientTele.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPatientTeleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatientTeleKeyReleased(evt);
            }
        });

        lblGender.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblGender.setText("GENDER:");

        rdbMale.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdbMale.setText("MALE");
        rdbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMaleActionPerformed(evt);
            }
        });

        rdbFemale.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdbFemale.setText("FEMALE");
        rdbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFemaleActionPerformed(evt);
            }
        });

        jLabel1.setText("PATIENT DETAIL");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Age:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSpeciality)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdbMale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(rdbFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 154, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtPatientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                        .addComponent(lblDoctorTele, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPatientTele, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPatientAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblDoctorAddress, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblSpeciality)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDoctorTele, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPatientTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbMale, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );

        pnlUi.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 400, 540));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblAllAppointment.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        lblAllAppointment.setText("ALL APPOINTMENT");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblAllAppointment)
                .addContainerGap(557, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblAllAppointment)
                .addContainerGap(476, Short.MAX_VALUE))
        );

        pnlUi.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 690, 540));

        jPanel2.add(pnlUi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1120, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed
        try {
            String id=txtPatientId.getText();
            PatientDTO search = patientController.search(id);
            txtPatientName.setText(search.getPatName());
            txtPatientAddress.setText(search.getPatAddress());
            txtPatientTele.setText(Integer.toString(search.getPatTele()));
            txtAge.setText(Integer.toString(search.getAge()));
            if (search.getGender().equalsIgnoreCase(rdbMale.getText())){
                rdbMale.setSelected(true);
            }else{
                rdbFemale.setSelected(true);
            }
            
            
            String doctor="";
            String speciality="";
            String speId="";
            String docId="";
            DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
            ArrayList<AppointmentDTO> all = appointmentController.getAll();
            for (AppointmentDTO all1 : all) {
                docId=all1.getDocId();
                
            }
            
            DoctorDTO search1 = doctorController.search(docId);
            doctor=search1.getDocName();
            speId=search1.getSpecialityId();
            SpecialityDTO search2 = specialityController.search(speId);
            speciality=search2.getSpename();
            dtm.setRowCount(0);
            for (AppointmentDTO all1 : all) {
                if (all1.getPatId().equalsIgnoreCase(id)) {
                    Object[]rowData={all1.getAppId(),all1.getAppNo(),all1.getAppDate(),all1.getAppTime(),all1.getBookingDate(),all1.getBookingTime(),doctor,speciality};
                    dtm.addRow(rowData);
                    
                }
                
            }
           
       } catch (Exception ex) {
            Logger.getLogger(SearchPatientAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                
                
    }//GEN-LAST:event_txtPatientIdActionPerformed

    private void txtPatientAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAddressActionPerformed

    private void txtPatientTeleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientTeleKeyPressed
        Validation.phoneNumber(txtPatientTele, evt);
    }//GEN-LAST:event_txtPatientTeleKeyPressed

    private void txtPatientTeleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientTeleKeyReleased
        Validation.phoneNumber(txtPatientTele, evt);
    }//GEN-LAST:event_txtPatientTeleKeyReleased

    private void rdbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbMaleActionPerformed

    private void rdbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbFemaleActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        try {
            String name=txtPatientName.getText();
            PatientDTO search = patientController.searchByPatientName(name);
            txtPatientId.setText(search.getPatId());
            txtPatientAddress.setText(search.getPatAddress());
            txtPatientTele.setText(Integer.toString(search.getPatTele()));
            txtAge.setText(Integer.toString(search.getAge()));
            if (search.getGender().equalsIgnoreCase(rdbMale.getText())){
                rdbMale.setSelected(true);
            }else{
                rdbFemale.setSelected(true);
            }
            
            
            String doctor="";
            String speciality="";
            String speId="";
            String docId="";
            DefaultTableModel dtm=(DefaultTableModel) jTable1.getModel();
            ArrayList<AppointmentDTO> all = appointmentController.getAll();
            for (AppointmentDTO all1 : all) {
                docId=all1.getDocId();
                
            }
            
            String patId=txtPatientId.getText();
            DoctorDTO search1 = doctorController.search(docId);
            doctor=search1.getDocName();
            speId=search1.getSpecialityId();
            SpecialityDTO search2 = specialityController.search(speId);
            speciality=search2.getSpename();
            for (AppointmentDTO all1 : all) {
                if (all1.getPatId().equals(patId)) {
                    Object[]rowData={all1.getAppId(),all1.getAppNo(),all1.getAppDate(),all1.getAppTime(),all1.getBookingDate(),all1.getBookingTime(),doctor,speciality};
                    dtm.addRow(rowData);
                    
                }
                
            }
           
       } catch (Exception ex) {
            Logger.getLogger(SearchPatientAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
              
    }//GEN-LAST:event_txtPatientNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAllAppointment;
    private javax.swing.JLabel lblDoctorAddress;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorTele;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlUi;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtPatientAddress;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientTele;
    // End of variables declaration//GEN-END:variables
}
