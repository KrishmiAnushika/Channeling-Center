/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.doctor_chaneling_center.view;

import edu.ijse.doctor_chaneling_center.controller.ControllerFactory;
import edu.ijse.doctor_chaneling_center.controller.custom.DayController;
import edu.ijse.doctor_chaneling_center.controller.custom.DoctorController;
import edu.ijse.doctor_chaneling_center.controller.custom.SheduleController;
import edu.ijse.doctor_chaneling_center.controller.custom.SpecialityController;
import edu.ijse.doctor_chaneling_center.dto.DayDTO;
import edu.ijse.doctor_chaneling_center.dto.DoctorDTO;
import edu.ijse.doctor_chaneling_center.dto.SheduleDTO;
import edu.ijse.doctor_chaneling_center.dto.SpecialityDTO;
import edu.ijse.doctor_chaneling_center.other.AutoGenId;
import edu.ijse.doctor_chaneling_center.other.Validation;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class CreateDoctorShedule extends javax.swing.JPanel {

    DoctorController doctorController;
    DayController dayController;
    SheduleController sheduleController;
    SpecialityController specialityController;
    DefaultTableModel dtm;

    /**
     * Creates new form CreateDoctorShedule
     */
    public CreateDoctorShedule() {
        initComponents();
        //setOrderDate();
        autoGenId();
        doctorController = (DoctorController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.DOCTOR);
        dayController = (DayController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.DAY);
        sheduleController = (SheduleController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SHEDULE);
        specialityController = (SpecialityController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SPECIALITY);
        dtm = (DefaultTableModel) tblDay.getModel();
        loadSpeciality();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        lblDoctorAddress = new javax.swing.JLabel();
        lblDoctorTele = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDoctorId = new javax.swing.JTextField();
        txtDoctorName = new javax.swing.JTextField();
        txtDoctorAddress = new javax.swing.JTextField();
        txtDocCharge = new javax.swing.JTextField();
        lblHospital = new javax.swing.JLabel();
        lblHospitalTele = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtHospital = new javax.swing.JTextField();
        txtHospitalTele = new javax.swing.JTextField();
        rdbMale = new javax.swing.JRadioButton();
        rdbFemale = new javax.swing.JRadioButton();
        lblSpeciality = new javax.swing.JLabel();
        cmbSpeciality = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtPatientLimit = new javax.swing.JTextField();
        txtDoctorTele = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        cbSunday = new javax.swing.JCheckBox();
        cbMonday = new javax.swing.JCheckBox();
        cbTuesday = new javax.swing.JCheckBox();
        cbWednesday = new javax.swing.JCheckBox();
        cbThursday = new javax.swing.JCheckBox();
        cbFriday = new javax.swing.JCheckBox();
        cbSaturday = new javax.swing.JCheckBox();
        cmbTSunday = new javax.swing.JComboBox();
        cmbTMonday = new javax.swing.JComboBox();
        cmbTTuesday = new javax.swing.JComboBox();
        cmbTWednsday = new javax.swing.JComboBox();
        cmbTFriday = new javax.swing.JComboBox();
        cmbTSaturday = new javax.swing.JComboBox();
        cmbTThursday = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDay = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 102));
        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("CREATE DOCTOR SHEDULE");
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1320, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("DOCTOR ID:");

        lblDoctorName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorName.setText("DOCTOR NAME:");

        lblDoctorAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorAddress.setText("DOCTOR ADDRESS:");

        lblDoctorTele.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDoctorTele.setText("DOCTOR TELE:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("DOCTOR CHARGE:");

        txtDoctorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIdActionPerformed(evt);
            }
        });

        txtDocCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocChargeActionPerformed(evt);
            }
        });

        lblHospital.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHospital.setText("HOSPITAL:");

        lblHospitalTele.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblHospitalTele.setText("HOSPITAL TELE:");

        lblGender.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblGender.setText("GENDER:");

        txtHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalActionPerformed(evt);
            }
        });

        txtHospitalTele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospitalTeleActionPerformed(evt);
            }
        });
        txtHospitalTele.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHospitalTeleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHospitalTeleKeyReleased(evt);
            }
        });

        buttonGroup1.add(rdbMale);
        rdbMale.setText("Male");

        buttonGroup1.add(rdbFemale);
        rdbFemale.setText("Female");

        lblSpeciality.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSpeciality.setText("SPECIALITY:");

        jLabel5.setText("PATIENT LIMIT:");

        txtDoctorTele.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDoctorTeleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDoctorTeleKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPatientLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDoctorTele, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDoctorTele, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblHospitalTele, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rdbMale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(rdbFemale))
                                    .addComponent(txtHospitalTele, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHospital, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDocCharge, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDoctorAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDoctorName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDoctorId, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addContainerGap(61, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDoctorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDoctorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDoctorTele, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDoctorTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDocCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lblHospitalTele, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHospitalTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbMale)
                    .addComponent(rdbFemale))
                .addGap(38, 38, 38))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 340, 550));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("ROOM :");

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("DELETE");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel14.setText("SELECTE DAY:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbSunday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbSunday.setText("SUNDAY");
        cbSunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSundayActionPerformed(evt);
            }
        });

        cbMonday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbMonday.setText("MONDAY");
        cbMonday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMondayActionPerformed(evt);
            }
        });

        cbTuesday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbTuesday.setText("TUESDAY");
        cbTuesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTuesdayActionPerformed(evt);
            }
        });

        cbWednesday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbWednesday.setText("WEDNESDAY");

        cbThursday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbThursday.setText("THURSDAY");

        cbFriday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbFriday.setText("FRIDAY");

        cbSaturday.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cbSaturday.setText("SATURDAY");

        cmbTSunday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTSunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTSundayActionPerformed(evt);
            }
        });

        cmbTMonday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTMonday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTMondayActionPerformed(evt);
            }
        });

        cmbTTuesday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTTuesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTTuesdayActionPerformed(evt);
            }
        });

        cmbTWednsday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTWednsday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTWednsdayActionPerformed(evt);
            }
        });

        cmbTFriday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTFriday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTFridayActionPerformed(evt);
            }
        });

        cmbTSaturday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTSaturday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTSaturdayActionPerformed(evt);
            }
        });

        cmbTThursday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        cmbTThursday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTThursdayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBox1, 0, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(cbSunday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cmbTSunday, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMonday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTMonday, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbWednesday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTWednsday, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbThursday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTThursday, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbFriday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbSaturday, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmbTFriday, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(cmbTSaturday, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(246, 246, 246))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSunday)
                    .addComponent(cbMonday)
                    .addComponent(cbTuesday)
                    .addComponent(cbWednesday)
                    .addComponent(cbThursday)
                    .addComponent(cbFriday)
                    .addComponent(cbSaturday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTSunday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTSaturday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTFriday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbTMonday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTWednsday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTThursday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jSeparator3.setBackground(new java.awt.Color(51, 102, 255));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblDay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DAY", "TIME"
            }
        ));
        jScrollPane1.setViewportView(tblDay);

        btnRemove.setText("REMOVE");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemove)
                .addGap(41, 41, 41))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addGap(96, 96, 96))))))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 930, 530));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 1320, 590));
    }// </editor-fold>//GEN-END:initComponents

    private void txtHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalActionPerformed

    private void txtHospitalTeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospitalTeleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospitalTeleActionPerformed

    private void cbTuesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTuesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTuesdayActionPerformed

    private void txtDoctorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIdActionPerformed
         String id = txtDoctorId.getText();
        try {
            DoctorDTO search = doctorController.search(id);
            if (search == null) {
                JOptionPane.showConfirmDialog(txtDoctorId, "DOCTOR NOT FOUND");
            } else {
                dtm.setRowCount(0);
                txtPatientLimit.setText(Integer.toString(search.getPatientLimit()));
                txtDoctorName.setText(search.getDocName());
                txtDoctorAddress.setText(search.getDocAddress());
                txtDoctorTele.setText(Integer.toString(search.getDocTele()));
                txtHospital.setText(search.getHospital());
                txtHospitalTele.setText(Integer.toString(search.gethTele()));
                if (search.getGender().equalsIgnoreCase("Male")) {
                    rdbMale.setSelected(true);
                } else {
                    rdbFemale.setSelected(true);
                }
                ArrayList<SpecialityDTO> all = specialityController.getAll();
                for (SpecialityDTO all1 : all) {
                    if (all1.getSpeid().equals(search.getSpecialityId())) {
                        cmbSpeciality.setSelectedItem(all1.getSpename());
                    }
                }
                txtDocCharge.setText(Double.toString(search.getDocCharge()));

//                String dayId = "";
//                ArrayList<SheduleDTO> all1 = sheduleController.getAll();
//                for (SheduleDTO all11 : all1) {
//                    dayId = all11.getDayid();
//                }
//
//                ArrayList<DayDTO> allDay = dayController.getAll();
//                String day = "";
//                for (DayDTO allDay1 : allDay) {
//                    if(allDay1.getDayid().equalsIgnoreCase(dayId)){
//                        day=allDay1.getDayname();
//                    }
//                }
                ArrayList<SheduleDTO> all1 = sheduleController.getAll();
                for (SheduleDTO all11 : all1) {
                    if (all11.getDocid().equalsIgnoreCase(id)) {

                        txtRoomNo.setText(all11.getRoom_no());
                        if (all11.getDayid().equalsIgnoreCase("d001")) {
                            cbSunday.setSelected(true);
                            cmbTSunday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d002")) {
                            cbMonday.setSelected(true);
                            cmbTMonday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d003")) {
                            cbTuesday.setSelected(true);
                            cmbTTuesday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d004")) {
                            cbWednesday.setSelected(true);
                            cmbTWednsday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d005")) {
                            cbThursday.setSelected(true);
                            cmbTThursday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d006")) {
                            cbFriday.setSelected(true);
                            cmbTFriday.setSelectedItem(all11.getTime());

                        }
                        if (all11.getDayid().equalsIgnoreCase("d007")) {
                            cbSaturday.setSelected(true);
                            cmbTSaturday.setSelectedItem(all11.getTime());

                        }
                    }
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDoctorIdActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ArrayList<SheduleDTO> sheduleDTOList = new ArrayList<>();
        DoctorDTO doctorDTO = null;
        String docId = txtDoctorId.getText();
        String docName = txtDoctorName.getText();
        String docAddress = txtDoctorAddress.getText();
        int docTele = Integer.parseInt(txtDoctorTele.getText());
        String hospital = txtHospital.getText();
        int hospitalTele = Integer.parseInt(txtHospitalTele.getText());
        String gender = "";
        if (rdbMale.isSelected()) {
            gender = "Male";
        } else {
            gender = "Female";
        }

        int patientLimit = Integer.parseInt(txtPatientLimit.getText());
        double docCharge = Double.parseDouble(txtDocCharge.getText());
        String speciality = cmbSpeciality.getSelectedItem().toString();
        String speId = "";
        try {
            ArrayList<SpecialityDTO> searchByName = specialityController.getAll();
            for (SpecialityDTO searchByName1 : searchByName) {
                if (searchByName1.getSpename().equalsIgnoreCase(speciality)) {
                    speId = searchByName1.getSpeid();
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        doctorDTO = new DoctorDTO(docId, docName, docAddress, docTele, hospital, hospitalTele, gender, patientLimit, docCharge, speId);

        for (int i = 0; i < tblDay.getRowCount(); i++) {

            String roomNo = txtRoomNo.getText();
            String time = (String) tblDay.getValueAt(i, 1);
            String day = (String) tblDay.getValueAt(i, 0);
            String dayId = "";
            try {
                ArrayList<DayDTO> all = dayController.getAll();
                for (DayDTO all1 : all) {
                    if (all1.getDayname().equalsIgnoreCase(day)) {
                        dayId = all1.getDayid();
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
            }

            SheduleDTO sheduleDTO = new SheduleDTO(roomNo, time, docId, dayId);
            sheduleDTOList.add(sheduleDTO);
        }

        try {
            boolean addDoctor = doctorController.addDoctor(doctorDTO, sheduleDTOList);
            if (addDoctor) {
                JOptionPane.showMessageDialog(this, "SUCCESS");
            } else {
                JOptionPane.showMessageDialog(this, "SOMETHING WENT WRONG");
            }
        } catch (Exception ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cbSundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSundayActionPerformed

    }//GEN-LAST:event_cbSundayActionPerformed

    private void cbMondayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMondayActionPerformed

    }//GEN-LAST:event_cbMondayActionPerformed

    private void cmbTSundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTSundayActionPerformed
        if (cbSunday.isSelected()) {
            String time = cmbTSunday.getSelectedItem().toString();
            String day = "Sunday";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }

    }//GEN-LAST:event_cmbTSundayActionPerformed

    private void cmbTMondayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTMondayActionPerformed
        if (cbMonday.isSelected()) {
            String time = cmbTMonday.getSelectedItem().toString();
            String day = "Monday";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTMondayActionPerformed

    private void cmbTTuesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTTuesdayActionPerformed
        if (cbTuesday.isSelected()) {
            String time = cmbTTuesday.getSelectedItem().toString();
            String day = "Tuesday";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTTuesdayActionPerformed

    private void cmbTWednsdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTWednsdayActionPerformed
        if (cbWednesday.isSelected()) {
            String time = cmbTWednsday.getSelectedItem().toString();
            String day = "Wednesday";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTWednsdayActionPerformed

    private void cmbTFridayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTFridayActionPerformed
        if (cbFriday.isSelected()) {
            String time = cmbTFriday.getSelectedItem().toString();
            String day = "Friday";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTFridayActionPerformed

    private void cmbTThursdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTThursdayActionPerformed
        if (cbThursday.isSelected()) {
            String time = cmbTThursday.getSelectedItem().toString();
            String day = "ThursDay";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTThursdayActionPerformed

    private void cmbTSaturdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTSaturdayActionPerformed
        if (cbSaturday.isSelected()) {
            String time = cmbTSaturday.getSelectedItem().toString();
            String day = "SaturDay";
            Object[] rowData = {day, time};
            dtm.addRow(rowData);
        } else {
            JOptionPane.showMessageDialog(this, "SELECT THE DAY..!");
        }
    }//GEN-LAST:event_cmbTSaturdayActionPerformed

    private void txtDocChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocChargeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        ArrayList<SheduleDTO> sheduleDTOList = new ArrayList<>();
        DoctorDTO doctorDTO = null;
        String docId = txtDoctorId.getText();
        String docName = txtDoctorName.getText();
        String docAddress = txtDoctorAddress.getText();
        int docTele = Integer.parseInt(txtDoctorTele.getText());
        String hospital = txtHospital.getText();
        int hospitalTele = Integer.parseInt(txtHospitalTele.getText());
        String gender = "";
        if (rdbMale.isSelected()) {
            gender = "Male";
        } else {
            gender = "Female";
        }

        int patientLimit = Integer.parseInt(txtPatientLimit.getText());
        double docCharge = Double.parseDouble(txtDocCharge.getText());
        String speciality = cmbSpeciality.getSelectedItem().toString();
        String speId = "";
        try {
            ArrayList<SpecialityDTO> searchByName = specialityController.getAll();
            for (SpecialityDTO searchByName1 : searchByName) {
                if (searchByName1.getSpename().equalsIgnoreCase(speciality)) {
                    speId = searchByName1.getSpeid();
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        doctorDTO = new DoctorDTO(docId, docName, docAddress, docTele, hospital, hospitalTele, gender, patientLimit, docCharge, speId);

        for (int i = 0; i < tblDay.getRowCount(); i++) {

            String roomNo = txtRoomNo.getText();
            String time = (String) tblDay.getValueAt(i, 1);
            String day = (String) tblDay.getValueAt(i, 0);
            String dayId = "";

            try {
                ArrayList<DayDTO> all = dayController.getAll();
                for (DayDTO all1 : all) {
                    if (all1.getDayname().equalsIgnoreCase(day)) {
                        dayId = all1.getDayid();
                    }
                }

            } catch (Exception ex) {
                Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
            }
            SheduleDTO sheduleDTO = sheduleDTO = new SheduleDTO(roomNo, time, docId, dayId);
            sheduleDTOList.add(sheduleDTO);
        }

        try {
            boolean updateDoctor = doctorController.updateDoctor(doctorDTO, sheduleDTOList);
            if (updateDoctor) {
                JOptionPane.showMessageDialog(this, "SUCCESS");
            } else {
                JOptionPane.showMessageDialog(this, "SOMETHING WENT WRONG");
            }
        } catch (Exception ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtHospitalTeleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHospitalTeleKeyReleased
        Validation.phoneNumber(txtHospitalTele, evt);
    }//GEN-LAST:event_txtHospitalTeleKeyReleased

    private void txtHospitalTeleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHospitalTeleKeyPressed
        Validation.phoneNumber(txtHospitalTele, evt);
    }//GEN-LAST:event_txtHospitalTeleKeyPressed

    private void txtDoctorTeleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorTeleKeyPressed
        Validation.phoneNumber(txtDoctorTele, evt);
    }//GEN-LAST:event_txtDoctorTeleKeyPressed

    private void txtDoctorTeleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorTeleKeyReleased
        Validation.phoneNumber(txtDoctorTele, evt);
    }//GEN-LAST:event_txtDoctorTeleKeyReleased

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        dtm.removeRow(tblDay.getSelectedRow());
    }//GEN-LAST:event_btnRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbFriday;
    private javax.swing.JCheckBox cbMonday;
    private javax.swing.JCheckBox cbSaturday;
    private javax.swing.JCheckBox cbSunday;
    private javax.swing.JCheckBox cbThursday;
    private javax.swing.JCheckBox cbTuesday;
    private javax.swing.JCheckBox cbWednesday;
    private javax.swing.JComboBox cmbSpeciality;
    private javax.swing.JComboBox cmbTFriday;
    private javax.swing.JComboBox cmbTMonday;
    private javax.swing.JComboBox cmbTSaturday;
    private javax.swing.JComboBox cmbTSunday;
    private javax.swing.JComboBox cmbTThursday;
    private javax.swing.JComboBox cmbTTuesday;
    private javax.swing.JComboBox cmbTWednsday;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblDoctorAddress;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorTele;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblHospitalTele;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JTable tblDay;
    private javax.swing.JTextField txtDocCharge;
    private javax.swing.JTextField txtDoctorAddress;
    private javax.swing.JTextField txtDoctorId;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorTele;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtHospitalTele;
    private javax.swing.JTextField txtPatientLimit;
    private javax.swing.JTextField txtRoomNo;
    // End of variables declaration//GEN-END:variables

    /*private void setOrderDate() {
     java.util.Date d1 = new java.util.Date();
     SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
     String formateDate = df.format(d1);
     txtDate.setText(formateDate);
     }*/
    private void loadSpeciality() {
        try {
            ArrayList<SpecialityDTO> all = specialityController.getAll();
            cmbSpeciality.removeAll();
            for (SpecialityDTO all1 : all) {
                cmbSpeciality.addItem(all1.getSpename());
            }
        } catch (Exception ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void autoGenId() {
        try {
            String newID = AutoGenId.getNewID("Doctor", "docId", "DOC");
            txtDoctorId.setText(newID);
        } catch (SQLException ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateDoctorShedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
